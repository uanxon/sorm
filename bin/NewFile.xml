<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jsjf.dao.sys.TBBorrowingOptLogMapper">
  <resultMap id="BaseResultMap" type="com.jsjf.model.sys.TBBorrowingOptLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="biid" jdbcType="INTEGER" property="biid" />
    <result column="optId" jdbcType="VARCHAR" property="optid" />
    <result column="addTime" jdbcType="TIMESTAMP" property="addtime" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
  </resultMap>
  <sql id="base_Sql">
    id, biid, optId, addTime, type, status, remark, ip
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="base_Sql" />
    from t_b_borrowing_opt_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_b_borrowing_opt_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jsjf.model.sys.TBBorrowingOptLog">
    insert into t_b_borrowing_opt_log (id, biid, optId, 
      addTime, type, status, 
      remark, ip)
    values (#{id,jdbcType=INTEGER}, #{biid,jdbcType=INTEGER}, #{optid,jdbcType=VARCHAR}, 
      #{addtime,jdbcType=TIMESTAMP}, #{type,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, 
      #{remark,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jsjf.model.sys.TBBorrowingOptLog">
    insert into t_b_borrowing_opt_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="biid != null">
        biid,
      </if>
      <if test="optid != null">
        optId,
      </if>
      <if test="addtime != null">
        addTime,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="ip != null">
        ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="biid != null">
        #{biid,jdbcType=INTEGER},
      </if>
      <if test="optid != null">
        #{optid,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jsjf.model.sys.TBBorrowingOptLog">
    update t_b_borrowing_opt_log
    <set>
      <if test="biid != null">
        biid = #{biid,jdbcType=INTEGER},
      </if>
      <if test="optid != null">
        optId = #{optid,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null">
        addTime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jsjf.model.sys.TBBorrowingOptLog">
    update t_b_borrowing_opt_log
    set biid = #{biid,jdbcType=INTEGER},
      optId = #{optid,jdbcType=VARCHAR},
      addTime = #{addtime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>